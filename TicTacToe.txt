package miniPro;
import java.util.Random;
import java.util.Scanner;
class launchGame {
	static char [][] board;
	public launchGame(){
		board = new char[3][3];
		initboard();
	}

	void initboard() {
		for(int i=0;i<board.length;i++) {
			for(int j=0;j<board[i].length;j++) {
				board[i][j] = ' ';
			}
		}
	}

	static void dispBoard() {
		System.out.println("----------------");
		for (int i=0;i<board.length;i++) {
			System.out.print("|  ");
			for(int j=0;j<board[i].length;j++) {
				System.out.print(board[i][j] + " |  ");
			}
			System.out.println();
			System.out.println("----------------");
		}
	}

	static void placeMark(int row, int col, char mark) {
		if(row >= 0 && row <= 2 && col >= 0 && col <= 2) {
			if (board[row][col] == ' ') {
				board[row][col] = mark;
			} else {
				System.out.println("Position already taken!");
			}
		} else {
			System.out.println("Invalid position");
		}
	}

  static	boolean checkColWin() {
		for(int j=0; j<=2; j++) {
			if(board[0][j] != ' ' && board[0][j] == board[1][j] && board[1][j] == board[2][j]) {
				return true;
			}
		}
		return false;
	}

	static boolean checkRowWin() {
		for(int i=0; i<=2; i++) {
			if(board[i][0] != ' ' && board[i][0] == board[i][1] && board[i][1] == board[i][2]) {
				return true;
			}
		}
		return false;
	}
	
	static boolean checkDiaWin() {
		if(board[0][0] != ' ' && board[0][0] == board[1][1] && board[1][1] == board[2][2]) {
			return true;
		}
		if(board[0][2] != ' ' && board[0][2] == board[1][1] && board[1][1] == board[2][0]) {
			return true;
		}
		return false;
	}



static boolean checkDraw() {
	for(int i =0;i<=2;i++) {
		for(int j=0;j<=2;j++) {
			if(board[i][j] == ' ') {
				return false;
			}
		}
	}
	return true;
}
}
abstract class Player{
	String name;
	char mark;
	abstract void makeMove();
	boolean isValidMove(int row , int col)
	{
		if(row >= 0 && row <=2 && col >=0 &&col <=2)
		{
			if(launchGame.board[row][col] == ' ')
			{
				return true;
			}
		}
			return false;
		
	}
	
}

class HumanPlayer extends Player
{
	
	HumanPlayer(String name, char mark){
		this.name = name;
		this.mark = mark;
	}
	void makeMove()
	{
		Scanner sc = new Scanner(System.in);
		int row,col;
		do {
		System.out.println("enter the row and col");
	    row = sc.nextInt();
	    col  =sc.nextInt();
	    
		}while(!isValidMove(row,col)); 
		launchGame.placeMark(row, col, mark);
	}
	
	
}

class AIPlayer extends Player
{
	
	AIPlayer(String name, char mark){
		this.name = name;
		this.mark = mark;
	}
	void makeMove()
	{
		Scanner sc = new Scanner(System.in);
		int row,col;
		do {
		
			Random r=new Random();
			row =r.nextInt(3);
			col =r.nextInt(3);
	    
		}while(!isValidMove(row,col)); 
		launchGame.placeMark(row, col, mark);
	}
	
	
}

public class TicTacToe {
	public static void main(String [] args) {
		launchGame l = new launchGame();
		 HumanPlayer p1 = new HumanPlayer("Bob",'X');
		// HumanPlayer p2 = new HumanPlayer("priya",'O');
		AIPlayer p2 =new AIPlayer("robo",'O');
		 Player cp ;
		 cp = p1;
		 while(true) {
		 System.out.println(cp.name+" turn");
		 cp.makeMove();
		 launchGame.dispBoard();
		 if(launchGame.checkColWin()|| launchGame.checkDiaWin()||launchGame.checkRowWin()) {
			System.out.println(cp.name+" has won");
			break;
		 }
		 else if(launchGame.checkDraw()) {
			 System.out.println("Game is Draw");
			 break;
		 }
		 else {
			 if(cp == p1) {
				 cp = p2;
			 }
			 else {
				 cp = p1;
			 }
		 }
	}
}
}
